{"numFailedTestSuites":7,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":7,"numTodoTests":0,"numTotalTestSuites":7,"numTotalTests":0,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1707035775146,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1707035777768,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\pages\\Welcome.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (9:9):\n\n    \u001b[0m \u001b[90m  7 |\u001b[39m test(\u001b[32m'welcome page check1'\u001b[39m\u001b[33m,\u001b[39m()\u001b[33m=>\u001b[39m{\u001b[0m\n    \u001b[0m \u001b[90m  8 |\u001b[39m     render(\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 10 |\u001b[39m             \u001b[33m<\u001b[39m\u001b[33mWelcome\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 11 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 12 |\u001b[39m     )\u001b[33m;\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:74:19)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1487:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1552:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1274:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2735:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1035:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:877:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:215:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3107:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:636:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:417:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:366:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1386:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1359:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1327:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2572:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2515:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1818:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1159:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n","name":"C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\pages\\Welcome.test.js","startTime":1707035777768,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1707035777768,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\components\\AppointmentForm.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (14:12):\n\n    \u001b[0m \u001b[90m 12 |\u001b[39m     \u001b[36mconst\u001b[39m setAppointmentsMock \u001b[33m=\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 13 |\u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m     render(\u001b[33m<\u001b[39m\u001b[33mAppointmentForm\u001b[39m appointments\u001b[33m=\u001b[39m{[]} setAppointments\u001b[33m=\u001b[39m{setAppointmentsMock} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 15 |\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 16 |\u001b[39m     \u001b[90m// Mock the axios.post method to return a specific response\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 17 |\u001b[39m     axios\u001b[33m.\u001b[39mpost\u001b[33m.\u001b[39mmockResolvedValueOnce({\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:74:19)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1487:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1552:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1274:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2735:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1035:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:877:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:215:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3107:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:636:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:417:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:366:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1386:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1359:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1327:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2572:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2515:10)\u001b[22m\n      \u001b[2mat Parser.parseAsyncArrowFromCallExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1055:10)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:900:27)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12\u001b[22m\n","name":"C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\components\\AppointmentForm.test.js","startTime":1707035777768,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1707035777768,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\components\\Navbar.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (10:11):\n\n    \u001b[0m \u001b[90m  8 |\u001b[39m     test(\u001b[32m'renders link1 in the header'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m  9 |\u001b[39m       render(\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 10 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 11 |\u001b[39m             \u001b[33m<\u001b[39m\u001b[33mNavbar\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 12 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 13 |\u001b[39m         )\u001b[33m;\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:74:19)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1487:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1552:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1274:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2735:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1035:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:877:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:215:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3107:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:636:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:417:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:366:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1386:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1359:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1327:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2572:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2515:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1818:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1159:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n","name":"C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\components\\Navbar.test.js","startTime":1707035777768,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1707035777768,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\pages\\Home.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (9:5):\n\n    \u001b[0m \u001b[90m  7 |\u001b[39m test(\u001b[32m'renders appointments and form'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m  8 |\u001b[39m   render(\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 10 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33mHome\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 11 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 12 |\u001b[39m   )\u001b[33m;\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:74:19)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1487:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1552:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1274:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2735:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1035:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:877:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:215:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3107:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:636:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:417:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:366:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1386:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1359:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1327:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2572:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2515:10)\u001b[22m\n      \u001b[2mat Parser.parseAsyncArrowFromCallExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1055:10)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:900:27)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12\u001b[22m\n","name":"C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\pages\\Home.test.js","startTime":1707035777768,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1707035777768,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\components\\IndividualComp.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (24:7):\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   it(\u001b[32m'renders loading state initially'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 23 |\u001b[39m     render(\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 25 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mRoutes\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 26 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mRoute\u001b[39m path\u001b[33m=\u001b[39m\u001b[32m\"/appointments/1\"\u001b[39m element\u001b[33m=\u001b[39m{\u001b[33m<\u001b[39m\u001b[33mIndividualComponents\u001b[39m \u001b[35m/>} /\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 27 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mRoutes\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:74:19)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1487:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1552:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1274:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2735:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1035:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:877:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:215:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3107:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:636:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:417:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:366:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1386:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1359:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1327:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2572:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2515:10)\u001b[22m\n      \u001b[2mat Parser.parseAsyncArrowFromCallExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1055:10)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:900:27)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12\u001b[22m\n","name":"C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\components\\IndividualComp.test.js","startTime":1707035777768,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1707035777768,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\components\\AppointementDetails.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (25:9):\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m   test(\u001b[32m'renders appointment details correctly'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 24 |\u001b[39m     render(\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 26 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mAppointmentDetails\u001b[39m appointment\u001b[33m=\u001b[39m{mockAppointment} onDelete\u001b[33m=\u001b[39m{mockOnDelete} onUpdateAppointment\u001b[33m=\u001b[39m{mockOnUpdateAppointment} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 27 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mBrowserRouter\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 28 |\u001b[39m     \u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:74:19)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1487:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1552:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1274:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2735:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1035:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:877:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:215:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3107:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:636:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:417:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:366:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1386:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1359:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1327:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2572:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2515:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1818:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1159:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n","name":"C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\components\\AppointementDetails.test.js","startTime":1707035777768,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1707035777768,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    SyntaxError: C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\App.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (12:7):\n\n    \u001b[0m \u001b[90m 10 |\u001b[39m   render(\u001b[0m\n    \u001b[0m \u001b[90m 11 |\u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 12 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33mApp\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 13 |\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 14 |\u001b[39m   )\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 15 |\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat toParseError (\u001b[22mnode_modules/@babel/parser/src/parse-error.ts\u001b[2m:74:19)\u001b[22m\n      \u001b[2mat Parser.raise (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1487:19)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/tokenizer/index.ts\u001b[2m:1552:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1274:16)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n      \u001b[2mat Parser.parseExprListItem (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2735:18)\u001b[22m\n      \u001b[2mat Parser.parseCallExpressionArguments (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1035:14)\u001b[22m\n      \u001b[2mat Parser.parseCoverCallAndAsyncArrowHead (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:877:29)\u001b[22m\n      \u001b[2mat Parser.parseSubscript (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:766:19)\u001b[22m\n      \u001b[2mat Parser.parseSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:724:19)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:709:17)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat Parser.parseExpressionBase (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:215:23)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:39)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3107:16)\u001b[22m\n      \u001b[2mat Parser.parseExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:206:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementContent (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:636:23)\u001b[22m\n      \u001b[2mat Parser.parseStatementLike (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:417:17)\u001b[22m\n      \u001b[2mat Parser.parseStatementListItem (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:366:17)\u001b[22m\n      \u001b[2mat Parser.parseBlockOrModuleBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1386:16)\u001b[22m\n      \u001b[2mat Parser.parseBlockBody (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1359:10)\u001b[22m\n      \u001b[2mat Parser.parseBlock (\u001b[22mnode_modules/@babel/parser/src/parser/statement.ts\u001b[2m:1327:10)\u001b[22m\n      \u001b[2mat Parser.parseFunctionBody (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2572:24)\u001b[22m\n      \u001b[2mat Parser.parseArrowExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:2515:10)\u001b[22m\n      \u001b[2mat Parser.parseParenAndDistinguishExpression (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1818:12)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:1159:21)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:703:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:680:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:642:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnaryOrPrivate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:385:14)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:397:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:352:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:292:21)\u001b[22m\n      \u001b[2mat callback (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:246:12)\u001b[22m\n      \u001b[2mat Parser.allowInAnd (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:3112:12)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssignAllowIn (\u001b[22mnode_modules/@babel/parser/src/parser/expression.ts\u001b[2m:245:17)\u001b[22m\n","name":"C:\\Users\\shanm\\OneDrive\\Desktop\\Appointment scheduling\\frontend\\src\\App.test.js","startTime":1707035777768,"status":"failed","summary":""}],"wasInterrupted":false}